#!/usr/bin/perl -w
#
##############################################################################
# $Id: load.DS,v 1.5 2020/03/05 10:39:30 lfgroene Exp $
##############################################################################
# This is only a test file to help during development. You can see how to
# use the different methods of the Form object.
#-- Aufruf: perl test.LO LO_DS06 ~/datastuff/chick/load/data/DS06_2014.csv off 2014
BEGIN {
   use Env qw( APIIS_HOME );
   die "\n\tAPIIS_HOME is not set!\n\n" unless $APIIS_HOME;
   push @INC, "$APIIS_HOME/lib";
   push @INC, "$APIIS_HOME/etc/reports";
}

use strict;
use warnings;
use Apiis;
Apiis->initialize( VERSION => '$Revision: 1.5 $' );
use Apiis::DataBase::User;
use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Terse  = 1;

my $LO = $ARGV[0];

## create a user objec create a user object to save repeated user/pw typing during tests:
my $testuser = Apiis::DataBase::User->new(
   id       => 'lfgroene',
   password => 'agrum1',
);

$testuser->check_status;
$apiis->join_model('chick', userobj => $testuser );
$apiis->check_status;
no strict "refs";

my $load_string="use $LO";
eval $load_string;
if ($@) { 
  print $@;
}
my %data_hash;
my ( $data,$stru ) = &$LO($apiis, {'FILE'=>$ARGV[1], 'importfilter'=>$ARGV[0], 'onlycheck'=>$ARGV[2],'action'=>'insert' }, $ARGV[3] );
print "Ende: $ARGV[1]\n";
#my ( $data,$stru ) = &$LO($apiis, 'sql', 'LO_DS11', 'on', 'insert', undef, undef  );
#my ( $data,$stru ) = &$LO($apiis, undef );
#my ( $data,$stru ) = &$LO($apiis, {'FILE'=>"$ENV{'HOME'}/database_stuff/chick/load/testdata/kroppsvekt_20_uker_2015-2016.csv", 'importfilter'=>'LO_DS07', 'onlycheck'=>'on','event_date'=>'16.06.2014' }, '2013' );
#my ( $data,$stru ) = &$LO($apiis, undef ,'2013' );
#$a=pdf(undef, $data,$stru);
#foreach my $err (@{$err_ref}) {
#  $err->print;
#}


